name: vipdev<%= siteSlug %>
env_file:
  - .env
proxy:
  nginx:
    - <%= siteSlug %>.vipdev.lndo.site
    - '*.<%= siteSlug %>.vipdev.lndo.site'
services:

  appserver:
    type: compose
    services:
      image: alpine
      command: sleep infinity

  devtools:
    type: compose
    services:
      image: wpvipdev/dev-tools:latest
      command: sleep infinity
      volumes:
        - devtools:/dev-tools
        - wp-config:/wp-config
    volumes:
      devtools: {}
      wp-config: {}

  nginx:
    type: compose
    services:
      image: wpvipdev/nginx:1.19.2-1
      command: nginx -g "daemon off;"
      volumes:
<% wpVolumes() %>

  php:
    type: compose
    services:
      image: wpvipdev/php-fpm:<%= phpVersion %>
      command: php-fpm
      working_dir: /wp
      volumes:
        - type: volume
          source: devtools
          target: /dev-tools
          volume:
            nocopy: true
<% wpVolumes() %>

    run_as_root:
      - sh /dev-tools/setup.sh database root "http://<%= siteSlug %>.vipdev.lndo.site/" "<%= wpTitle %>"

  database:
    type: mariadb
    portforward: 13306

  memcached:
    type: memcached:1.5.12

  #mailhog:
  #  type: mailhog
  #  hogfrom:
  #  - php

  phpmyadmin:
    type: phpmyadmin
    hosts:
      - database

  vip-search:
    type: elasticsearch:custom
    overrides:
      image: bitnami/elasticsearch:7.8.0

  statsd:
    type: compose
    services:
      image: wpvipdev/statsd:v0.8.6-1
      command: node stats.js /config/statsd-config.js

  # Code containers

<% if ( wordpress.mode == 'image' ) { %>
  wordpress:
    type: compose
    services:
      image: <%= wordpress.image %>:<%= wordpress.tag %>
      command: sh /run.sh
      volumes:
        - wordpress:/shared
    volumes:
      wordpress: {}
<% } %>

<% if ( muplugins.mode == 'image' ) { %>
  mu-plugins:
    type: compose
    services: 
      image: <%= muplugins.image %>:<%= muplugins.tag %>
      command: sh /run.sh
      volumes:
        - mu-plugins:/shared
    volumes:
      mu-plugins: {}
<% } %>

<% if ( jetpack.mode == 'image' ) { %>
  jetpack:
    type: compose
    services: 
      image: <%= jetpack.image %>:<%= jetpack.tag %>
      command: sh /run.sh
      volumes:
        - jetpack:/shared
    volumes:
      jetpack: {}
<% } %>

<% if ( clientcode.mode == 'image' ) { %>
  client-code:
    type: compose
    services: 
      image: <%= clientcode.image %>:<%= clientcode.tag %>
      command: sleep infinity
      volumes:
        - clientcode_clientmuplugins:/clientcode/client-mu-plugins
        - clientcode_images:/clientcode/images
        - clientcode_languages:/clientcode/languages
        - clientcode_plugins:/clientcode/plugins
        - clientcode_private:/clientcode/private
        - clientcode_themes:/clientcode/themes
        - clientcode_vipconfig:/clientcode/vip-config
    volumes:
      clientcode_clientmuplugins: {}
      clientcode_images: {}
      clientcode_languages: {}
      clientcode_plugins: {}
      clientcode_private: {}
      clientcode_themes: {}
      clientcode_vipconfig: {}
<% } %>

tooling:
  wp:
    service: php
    description: "Run WP-CLI command"
    cmd:
      - wp

  test:
    service: php
    description: "Run all tests: lando test"
    cmd:
      - cd /wp/wp-content/mu-plugins && phpunit

  add-fake-data:
    service: php
    description: "Add fake data described in '/configs/fixtures/test_fixtures.yml'. You can also use 'wp fixtures' directly to aim it at other files within lando."
    cmd:
     - wp fixtures load --file=/app/configs/fixtures/test_fixtures.yml
  
  delete-fake-data:
    service: php
    description: "Delete all fake data generated by 'wp fixtures'"
    cmd:
     - wp fixtures delete
  
  vip-switch:
    service: php
    description: "Swap your wp-content with a client repo or the vip-go-skeleton"
    cmd:
     - bash /app/bin/lando/vip-switch.sh

  setup-multisite:
    service: php
    description: "Setup WordPress network to enable multisite mode"
    cmd:
      - bash /app/bin/lando/setup-multisite.sh

  add-site:
    service: php
    description: "Add site to a multisite installation"
    cmd:
      - bash /app/bin/lando/add-site.sh

<% function wpVolumes() { %>
<% if ( wordpress.mode == 'image' ) { %>
        - type: volume
          source: wordpress
          target: /wp
          volume:
            nocopy: true
<% } else { %>
        - <%= wordpress.dir %>:/wp
<% } %>
<% if ( muplugins.mode == 'image' ) { %>
        - type: volume
          source: mu-plugins
          target: /wp/wp-content/mu-plugins
          volume:
            nocopy: true
<% } else { %>
        - <%= muplugins.dir %>:/wp/wp-content/mu-plugins
<% } %>
<% if ( jetpack.mode == 'image' ) { %>
        - type: volume
          source: jetpack
          target: /wp/wp-content/mu-plugins/jetpack
          volume:
            nocopy: true
<% } else { %>
        - <%= jetpack.dir %>:/wp/wp-content/mu-plugins/jetpack
<% } %>
<% if ( clientcode.mode == 'image' ) { %>
        - type: volume
          source: clientcode_clientmuplugins
          target: /wp/wp-content/client-mu-plugins
          volume:
            nocopy: true
        - type: volume
          source: clientcode_images
          target: /wp/wp-content/images
          volume:
            nocopy: true
        - type: volume
          source: clientcode_languages
          target: /wp/wp-content/languages
          volume:
            nocopy: true
        - type: volume
          source: clientcode_plugins
          target: /wp/wp-content/plugins
          volume:
            nocopy: true
        - type: volume
          source: clientcode_private
          # FIXME: Do we need this to be out of /wp for local development?
          target: /wp/wp-content/private
          volume:
            nocopy: true
        - type: volume
          source: clientcode_themes
          target: /wp/wp-content/themes
          volume:
            nocopy: true
        - type: volume
          source: clientcode_vipconfig
          target: /wp/wp-content/vip-config
          volume:
            nocopy: true
<% } else { %>
        - <%= clientcode.dir %>/client-mu-plugins:/wp/wp-content/client-mu-plugins
        - <%= clientcode.dir %>/images:/wp/wp-content/images
        - <%= clientcode.dir %>/languages:/wp/wp-content/languages
        - <%= clientcode.dir %>/plugins:/wp/wp-content/plugins
        - <%= clientcode.dir %>/private:/wp/wp-content/private
        - <%= clientcode.dir %>/themes:/wp/wp-content/themes
        - <%= clientcode.dir %>/vip-config:/wp/wp-content/vip-config
<% } %>
        - type: volume
          source: wp-config
          target: /wp/config
          volume:
            nocopy: true
<% } %>
